{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api'; // action types\n\nconst GET_POST_LIST = 'list/GET_POST_LIST'; // action creators\n\nexport const getPostList = createAction(GET_POST_LIST, api.getPostList, meta => meta); // initial state\n\nconst initialState = Map({\n  posts: List(),\n  lastPage: null\n}); // reducer\n\nexport default handleActions({ ...pender({\n    type: GET_POST_LIST,\n    onSuccess: (state, action) => {\n      const {\n        data: posts\n      } = action.payload;\n      const lastPage = action.payload.headers['last-page'];\n      return state.set('posts', fromJS(posts)).set('lastPage', parseInt(lastPage, 10));\n    }\n  })\n}, initialState);","map":{"version":3,"sources":["D:/문서/개발/react/blog/blog-frontend/src/store/modules/list.js"],"names":["createAction","handleActions","Map","List","fromJS","pender","api","GET_POST_LIST","getPostList","meta","initialState","posts","lastPage","type","onSuccess","state","action","data","payload","headers","set","parseInt"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,QAAkC,WAAlC;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,SAArB,C,CAEA;;AACA,MAAMC,aAAa,GAAG,oBAAtB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGR,YAAY,CAACO,aAAD,EAAgBD,GAAG,CAACE,WAApB,EAAiCC,IAAI,IAAIA,IAAzC,CAAhC,C,CAEP;;AACA,MAAMC,YAAY,GAAGR,GAAG,CAAC;AACrBS,EAAAA,KAAK,EAAER,IAAI,EADU;AAErBS,EAAAA,QAAQ,EAAE;AAFW,CAAD,CAAxB,C,CAKA;;AACA,eAAeX,aAAa,CAAC,EACzB,GAAGI,MAAM,CAAC;AACNQ,IAAAA,IAAI,EAAEN,aADA;AAENO,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1B,YAAM;AAAEC,QAAAA,IAAI,EAAEN;AAAR,UAAkBK,MAAM,CAACE,OAA/B;AAEA,YAAMN,QAAQ,GAAGI,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAuB,WAAvB,CAAjB;AACA,aAAOJ,KAAK,CAACK,GAAN,CAAU,OAAV,EAAmBhB,MAAM,CAACO,KAAD,CAAzB,EACMS,GADN,CACU,UADV,EACsBC,QAAQ,CAACT,QAAD,EAAW,EAAX,CAD9B,CAAP;AAEH;AARK,GAAD;AADgB,CAAD,EAWzBF,YAXyB,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\n\r\nimport { Map, List, fromJS } from 'immutable';\r\nimport { pender } from 'redux-pender';\r\n\r\nimport * as api from 'lib/api';\r\n\r\n// action types\r\nconst GET_POST_LIST = 'list/GET_POST_LIST';\r\n\r\n// action creators\r\nexport const getPostList = createAction(GET_POST_LIST, api.getPostList, meta => meta);\r\n\r\n// initial state\r\nconst initialState = Map({\r\n    posts: List(),\r\n    lastPage: null\r\n});\r\n\r\n// reducer\r\nexport default handleActions({\r\n    ...pender({\r\n        type: GET_POST_LIST,\r\n        onSuccess: (state, action) => {\r\n            const { data: posts } = action.payload;\r\n\r\n            const lastPage = action.payload.headers['last-page'];\r\n            return state.set('posts', fromJS(posts))\r\n                        .set('lastPage', parseInt(lastPage, 10));                        \r\n        }\r\n    })\r\n}, initialState)"]},"metadata":{},"sourceType":"module"}