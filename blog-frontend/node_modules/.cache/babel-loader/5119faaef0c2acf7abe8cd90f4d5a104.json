{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { Map, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api'; // action types\n\nconst GET_POST = 'post/GET_POST'; // action creators\n\nexport const getPost = createAction(GET_POST, api.getPost); // initial state\n\nconst initialState = Map({\n  post: Map({})\n}); // reducer\n\nexport default handleActions({ ...pender({\n    type: GET_POST,\n    onSuccess: (state, action) => {\n      const {\n        data: post\n      } = action.payload;\n      return state.set('post', fromJS(post));\n    }\n  })\n}, initialState);","map":{"version":3,"sources":["D:/문서/개발/react/blog/blog-frontend/src/store/modules/post.js"],"names":["createAction","handleActions","Map","fromJS","pender","api","GET_POST","getPost","initialState","post","type","onSuccess","state","action","data","payload","set"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,EAAcC,MAAd,QAA4B,WAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,SAArB,C,CAGA;;AACA,MAAMC,QAAQ,GAAG,eAAjB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAGP,YAAY,CAACM,QAAD,EAAWD,GAAG,CAACE,OAAf,CAA5B,C,CAEP;;AACA,MAAMC,YAAY,GAAGN,GAAG,CAAC;AACrBO,EAAAA,IAAI,EAAEP,GAAG,CAAC,EAAD;AADY,CAAD,CAAxB,C,CAIA;;AACA,eAAeD,aAAa,CAAC,EACzB,GAAGG,MAAM,CAAC;AACNM,IAAAA,IAAI,EAAEJ,QADA;AAENK,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1B,YAAM;AAAEC,QAAAA,IAAI,EAAEL;AAAR,UAAiBI,MAAM,CAACE,OAA9B;AACA,aAAOH,KAAK,CAACI,GAAN,CAAU,MAAV,EAAkBb,MAAM,CAACM,IAAD,CAAxB,CAAP;AACH;AALK,GAAD;AADgB,CAAD,EAQzBD,YARyB,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\n\r\nimport { Map, fromJS } from 'immutable';\r\nimport { pender } from 'redux-pender';\r\n\r\nimport * as api from 'lib/api';\r\n\r\n\r\n// action types\r\nconst GET_POST = 'post/GET_POST';\r\n\r\n// action creators\r\nexport const getPost = createAction(GET_POST, api.getPost);\r\n\r\n// initial state\r\nconst initialState = Map({\r\n    post: Map({})\r\n});\r\n\r\n// reducer\r\nexport default handleActions({\r\n    ...pender({\r\n        type: GET_POST,\r\n        onSuccess: (state, action) => {\r\n            const { data: post } = action.payload;\r\n            return state.set('post', fromJS(post));\r\n        }\r\n    })\r\n}, initialState)"]},"metadata":{},"sourceType":"module"}