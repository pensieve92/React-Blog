{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uBB38\\uC11C\\\\\\uAC1C\\uBC1C\\\\react\\\\blog\\\\blog-frontend\\\\src\\\\components\\\\modal\\\\ModalWrapper\\\\ModalWrapper.js\";\nimport React, { Component } from 'react';\nimport styles from './ModalWrapper.scss';\nimport classNames from 'classnames/bind';\nconst cx = classNames.bind(styles);\n\nclass ModalWrapper extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animate: false\n    };\n\n    this.startAnimation = () => {\n      // animate 값을 true로 설정 후\n      this.setState({\n        animate: true\n      }); // 250ms 이후 다시 false로 설정\n\n      setTimeout(() => {\n        this.setState({\n          animate: false\n        });\n      }, 250);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.visible !== this.props.visible) {\n      this.startAnimation();\n    }\n  }\n\n  render() {\n    const {\n      children,\n      visible\n    } = this.props;\n    const {\n      animate\n    } = this.state; // visible과 animate 값이 둘 다 false 일 때만 \n    // null 리턴\n\n    if (!visible && !animate) return null; // 상태에 따라 애니메이션 설정\n\n    const animation = animate && (visible ? 'enter' : 'leave');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx('gray-background'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: cx('modal-wrapper'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: cx('modal'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, children)));\n  }\n\n}\n\nexport default ModalWrapper;","map":{"version":3,"sources":["D:/문서/개발/react/blog/blog-frontend/src/components/modal/ModalWrapper/ModalWrapper.js"],"names":["React","Component","styles","classNames","cx","bind","ModalWrapper","state","animate","startAnimation","setState","setTimeout","componentDidUpdate","prevProps","prevState","visible","props","render","children","animation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,MAAMC,EAAE,GAAGD,UAAU,CAACE,IAAX,CAAgBH,MAAhB,CAAX;;AAEA,MAAMI,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCM,KADmC,GAC3B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD2B;;AAAA,SAKnCC,cALmC,GAKlB,MAAM;AACrB;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAE;AADG,OAAd,EAFqB,CAKrB;;AACAG,MAAAA,UAAU,CAAC,MAAK;AACd,aAAKD,QAAL,CAAc;AACZF,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD,OAJS,EAIP,GAJO,CAAV;AAKD,KAhBkC;AAAA;;AAkBnCI,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAID,SAAS,CAACE,OAAV,KAAsB,KAAKC,KAAL,CAAWD,OAArC,EAA+C;AAC7C,WAAKN,cAAL;AACD;AACF;;AAEDQ,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEC,MAAAA,QAAF;AAAYH,MAAAA;AAAZ,QAAwB,KAAKC,KAAnC;AACA,UAAM;AAAER,MAAAA;AAAF,QAAc,KAAKD,KAAzB,CAHO,CAKP;AACA;;AACA,QAAI,CAACQ,OAAD,IAAY,CAACP,OAAjB,EAA2B,OAAO,IAAP,CAPpB,CASP;;AACA,UAAMW,SAAS,GAAGX,OAAO,KAAKO,OAAO,GAAG,OAAH,GAAa,OAAzB,CAAzB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEX,EAAE,CAAC,iBAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAEA,EAAE,CAAC,eAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEA,EAAE,CAAC,OAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIc,QADJ,CADF,CAFF,CADF;AAUD;;AA9CkC;;AAgDrC,eAAeZ,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport styles from './ModalWrapper.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nclass ModalWrapper extends Component {  \n  state = {\n    animate: false\n  }\n\n  startAnimation = () => {\n    // animate 값을 true로 설정 후\n    this.setState({\n      animate: true\n    })\n    // 250ms 이후 다시 false로 설정\n    setTimeout(()=> {\n      this.setState({\n        animate: false\n      });\n    }, 250)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if( prevProps.visible !== this.props.visible ) {\n      this.startAnimation();\n    }\n  }\n\n  render() {\n\n    const { children, visible } = this.props;\n    const { animate } = this.state;\n\n    // visible과 animate 값이 둘 다 false 일 때만 \n    // null 리턴\n    if( !visible && !animate ) return null;\n\n    // 상태에 따라 애니메이션 설정\n    const animation = animate && (visible ? 'enter' : 'leave');\n\n    return (\n      <div>\n        <div className={cx('gray-background')} />\n        <div className={cx('modal-wrapper')}>\n          <div className={cx('modal')}>\n            { children }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default ModalWrapper;\n"]},"metadata":{},"sourceType":"module"}