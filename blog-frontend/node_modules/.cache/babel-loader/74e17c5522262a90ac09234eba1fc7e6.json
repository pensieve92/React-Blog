{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uBB38\\uC11C\\\\\\uAC1C\\uBC1C\\\\react\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\post\\\\Post.js\";\nimport React, { Component } from 'react';\nimport PostInfo from 'components/post/PostInfo';\nimport PostBody from 'components/post/PostBody';\nimport * as postActions from 'store/modules/post';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.initialize = async () => {\n      const {\n        PostActions,\n        id\n      } = this.props;\n\n      try {\n        await PostActions.getPost(id);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  render() {\n    const {\n      loading,\n      post\n    } = this.props;\n    if (loading) return null; // 로딩 중일 때는 아무것도 보여 주지않음\n\n    const {\n      title,\n      body,\n      publishedDate,\n      tags\n    } = post.toJS();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(PostInfo, {\n      title: title,\n      publishedDate: publishedDate,\n      tags: tags,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(PostBody, {\n      body: body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  post: state.post.get('post'),\n  loading: state.pender.pending['post/GET_POST'] // 로딩실패\n\n}), dispatch => ({\n  PostActions: bindActionCreators(postActions, dispatch)\n}))(Post);","map":{"version":3,"sources":["D:/문서/개발/react/blog/blog-frontend/src/containers/post/Post.js"],"names":["React","Component","PostInfo","PostBody","postActions","connect","bindActionCreators","Post","initialize","PostActions","id","props","getPost","e","console","log","componentDidMount","render","loading","post","title","body","publishedDate","tags","toJS","state","get","pender","pending","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SACzBO,UADyB,GACZ,YAAY;AACrB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAsB,KAAKC,KAAjC;;AACA,UAAI;AACA,cAAMF,WAAW,CAACG,OAAZ,CAAoBF,EAApB,CAAN;AACH,OAFD,CAEE,OAAMG,CAAN,EAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,KARwB;AAAA;;AAUzBG,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,UAAL;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoB,KAAKR,KAA/B;AAEA,QAAGO,OAAH,EAAY,OAAO,IAAP,CAHP,CAGoB;;AAEzB,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA,aAAf;AAA8BC,MAAAA;AAA9B,QAAuCJ,IAAI,CAACK,IAAL,EAA7C;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,KAAjB;AAAwB,MAAA,aAAa,EAAEE,aAAvC;AAAsD,MAAA,IAAI,EAAEC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA3BwB;;AA8B7B,eAAehB,OAAO,CACjBoB,KAAD,KAAY;AACRN,EAAAA,IAAI,EAAEM,KAAK,CAACN,IAAN,CAAWO,GAAX,CAAe,MAAf,CADE;AAERR,EAAAA,OAAO,EAAEO,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,eAArB,CAFD,CAEuC;;AAFvC,CAAZ,CADkB,EAKjBC,QAAD,KAAe;AACXpB,EAAAA,WAAW,EAAEH,kBAAkB,CAACF,WAAD,EAAcyB,QAAd;AADpB,CAAf,CALkB,CAAP,CAQZtB,IARY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PostInfo from 'components/post/PostInfo';\r\nimport PostBody from 'components/post/PostBody';\r\nimport * as postActions from 'store/modules/post';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nclass Post extends Component {\r\n    initialize = async () => {\r\n        const { PostActions, id } = this.props;\r\n        try {\r\n            await PostActions.getPost(id);            \r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initialize();\r\n    }\r\n\r\n    render() {\r\n        const { loading, post } = this.props;\r\n\r\n        if(loading) return null; // 로딩 중일 때는 아무것도 보여 주지않음\r\n\r\n        const { title, body, publishedDate, tags } = post.toJS();\r\n\r\n        return (\r\n            <div>\r\n                <PostInfo title={title} publishedDate={publishedDate} tags={tags} />\r\n                <PostBody body={body} />\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        post: state.post.get('post'),\r\n        loading: state.pender.pending['post/GET_POST'] // 로딩실패\r\n    }),\r\n    (dispatch) => ({\r\n        PostActions: bindActionCreators(postActions, dispatch)\r\n    })\r\n) (Post);"]},"metadata":{},"sourceType":"module"}