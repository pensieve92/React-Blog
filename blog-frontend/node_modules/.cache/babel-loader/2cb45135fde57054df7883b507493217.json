{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api'; // action types\n\nconst INITIALIZE = 'editor/INITIALIZE';\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT';\nconst WRITE_POST = 'editor/WRITE_POST';\nconst GET_POST = 'editor/GET_POST'; // action creators\n\nexport const initialize = createAction(INITIALIZE);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const writePost = createAction(WRITE_POST, api.writePost); // initial state\n\nconst initialState = Map({\n  title: '',\n  markdown: '',\n  tags: '',\n  postId: null\n}); // reducer\n\nexport default handleActions({\n  [INITIALIZE]: (state, action) => initialState,\n  [CHANGE_INPUT]: (state, action) => {\n    const {\n      name,\n      value\n    } = action.payload;\n    return state.set(name, value);\n  },\n  ...pender({\n    type: WRITE_POST,\n    onSuccess: (state, action) => {\n      const {\n        _id\n      } = action.payload.data;\n      return state.set('postId', _id);\n    }\n  })\n}, initialState);","map":{"version":3,"sources":["D:/문서/개발/react/blog/blog-frontend/src/store/modules/editor.js"],"names":["createAction","handleActions","Map","pender","api","INITIALIZE","CHANGE_INPUT","WRITE_POST","GET_POST","initialize","changeInput","writePost","initialState","title","markdown","tags","postId","state","action","name","value","payload","set","type","onSuccess","_id","data"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,SAArB,C,CAGA;;AACA,MAAMC,UAAU,GAAG,mBAAnB;AACA,MAAMC,YAAY,GAAG,qBAArB;AAEA,MAAMC,UAAU,GAAG,mBAAnB;AACA,MAAMC,QAAQ,GAAE,iBAAhB,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAGT,YAAY,CAACK,UAAD,CAA/B;AACP,OAAO,MAAMK,WAAW,GAAGV,YAAY,CAACM,YAAD,CAAhC;AAEP,OAAO,MAAMK,SAAS,GAAGX,YAAY,CAACO,UAAD,EAAaH,GAAG,CAACO,SAAjB,CAA9B,C,CAIP;;AACA,MAAMC,YAAY,GAAGV,GAAG,CAAC;AACrBW,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,QAAQ,EAAE,EAFW;AAGrBC,EAAAA,IAAI,EAAE,EAHe;AAIrBC,EAAAA,MAAM,EAAE;AAJa,CAAD,CAAxB,C,CAQA;;AACA,eAAef,aAAa,CAAC;AACzB,GAACI,UAAD,GAAc,CAACY,KAAD,EAAQC,MAAR,KAAmBN,YADR;AAEzB,GAACN,YAAD,GAAgB,CAACW,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,MAAM,CAACG,OAA/B;AACA,WAAOJ,KAAK,CAACK,GAAN,CAAUH,IAAV,EAAgBC,KAAhB,CAAP;AACH,GALwB;AAMzB,KAAGjB,MAAM,CAAC;AACNoB,IAAAA,IAAI,EAAEhB,UADA;AAENiB,IAAAA,SAAS,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC1B,YAAM;AAAEO,QAAAA;AAAF,UAAUP,MAAM,CAACG,OAAP,CAAeK,IAA/B;AACA,aAAOT,KAAK,CAACK,GAAN,CAAU,QAAV,EAAoBG,GAApB,CAAP;AACH;AALK,GAAD;AANgB,CAAD,EAazBb,YAbyB,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\n\r\nimport { Map } from 'immutable';\r\nimport { pender } from 'redux-pender';\r\n\r\nimport * as api from 'lib/api';\r\n\r\n\r\n// action types\r\nconst INITIALIZE = 'editor/INITIALIZE';\r\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT';\r\n\r\nconst WRITE_POST = 'editor/WRITE_POST';\r\nconst GET_POST ='editor/GET_POST';\r\n\r\n// action creators\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeInput = createAction(CHANGE_INPUT);\r\n\r\nexport const writePost = createAction(WRITE_POST, api.writePost);\r\n\r\n\r\n\r\n// initial state\r\nconst initialState = Map({\r\n    title: '',\r\n    markdown: '',\r\n    tags: '',\r\n    postId: null\r\n\r\n});\r\n\r\n// reducer\r\nexport default handleActions({\r\n    [INITIALIZE]: (state, action) => initialState,\r\n    [CHANGE_INPUT]: (state, action) => {\r\n        const { name, value } = action.payload;\r\n        return state.set(name, value);\r\n    },\r\n    ...pender({\r\n        type: WRITE_POST,\r\n        onSuccess: (state, action) => {\r\n            const { _id } = action.payload.data;\r\n            return state.set('postId', _id);\r\n        }\r\n    })\r\n}, initialState)"]},"metadata":{},"sourceType":"module"}