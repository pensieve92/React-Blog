{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\uBB38\\uC11C\\\\\\uAC1C\\uBC1C\\\\react\\\\blog\\\\blog-frontend\\\\src\\\\components\\\\post\\\\PostInfo\\\\PostInfo.js\";\nimport React from 'react';\nimport styles from './PostInfo.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nconst cx = classNames.bind(styles);\n\nconst PostInfo = ({\n  publishedDate,\n  title,\n  tags\n}) => React.createElement(\"div\", {\n  className: cx('PostInfo'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: cx('info'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, title), React.createElement(\"div\", {\n  className: cx('tags'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, // tags가 존재할 때만 map을 실행합니다.\ntags && tags.map(tag => React.createElement(Link, {\n  key: tag,\n  to: `/tag/${tag}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"#\", tag))), React.createElement(\"div\", {\n  className: cx('date'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, moment(publishedDate).format('ll'))));\n\nexport default PostInfo;","map":{"version":3,"sources":["D:/문서/개발/react/blog/blog-frontend/src/components/post/PostInfo/PostInfo.js"],"names":["React","styles","classNames","Link","moment","cx","bind","PostInfo","publishedDate","title","tags","map","tag","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,EAAE,GAAGH,UAAU,CAACI,IAAX,CAAgBL,MAAhB,CAAX;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAD,KACf;AAAK,EAAA,SAAS,EAAEL,EAAE,CAAC,UAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAEA,EAAE,CAAC,MAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKI,KAAL,CADF,EAEE;AAAK,EAAA,SAAS,EAAEJ,EAAE,CAAC,MAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AACAK,IAAI,IAAIA,IAAI,CAACC,GAAL,CACNC,GAAG,IAAI,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA,GAAX;AAAgB,EAAA,EAAE,EAAG,QAAOA,GAAI,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAqCA,GAArC,CADD,CAHZ,CAFF,EAUE;AAAK,EAAA,SAAS,EAAEP,EAAE,CAAC,MAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA6BD,MAAM,CAACI,aAAD,CAAN,CAAsBK,MAAtB,CAA6B,IAA7B,CAA7B,CAVF,CADF,CADF;;AAiBA,eAAeN,QAAf","sourcesContent":["import React from 'react';\nimport styles from './PostInfo.scss';\nimport classNames from 'classnames/bind';\n\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst cx = classNames.bind(styles);\n\nconst PostInfo = ({publishedDate, title, tags}) => (\n  <div className={cx('PostInfo')} >\n    <div className={cx('info')}>\n      <h1>{title}</h1>      \n      <div className={cx('tags')}>\n        {\n          // tags가 존재할 때만 map을 실행합니다.\n          tags && tags.map(\n            tag => <Link key={tag} to={`/tag/${tag}`}>#{tag}</Link>\n          )\n        }\n      </div>\n      <div className={cx('date')}>{moment(publishedDate).format('ll')}</div>\n    </div>\n  </div>\n);\n\nexport default PostInfo;\n"]},"metadata":{},"sourceType":"module"}